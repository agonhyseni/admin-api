name: "Submodules Sync"

on:
  # Allows you to run this workflow manually from the Actions tab or through HTTP API
  workflow_dispatch:

jobs:
  sync:
    name: "Submodules Sync"
    runs-on: ubuntu-latest
    env:
      NEW_BRANCH: "submodule-update"
      BASE_BRANCH: "main"

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.CI_TOKEN }}
          submodules: true

      # Update references
      - name: Git Submodule Update
        run: |
          git pull --recurse-submodules
          git submodule update --remote --recursive

      # Creating a new branch where we try to push changes if there are any
      - name: Create new branch and push changes
        id: create-branch-push-changes
        shell: bash
        run: |
          git config --global user.name 'Submodule update bot'
          git config --global user.email 'bot@noreply.github.com'
          git checkout -b ${{ env.NEW_BRANCH }}
          git commit -am "Auto updated submodule references"
          git push --set-upstream origin ${{ env.NEW_BRANCH }}  || echo '::set-output name=has_changes::false'

      # Closing the previous pull request which has the same branch name before opening the new one
      - name: Close previous pull request if exists
        if: steps.create-branch-push-changes.outputs.has_changes != 'false'
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.CI_TOKEN }}
          script: |
            const { repo, owner } = context.repo;
            const { data } = await github.rest.pulls.list({
              owner,
              repo,
              head: '${{ env.NEW_BRANCH }}',
            });
            if(data && data.length === 1){
              await github.rest.pulls.createReviewComment({
                owner,
                repo,
                pull_number: data[0].number,
                body: 'Closing this PR to open another one with a newer commit hash!',
              });
              await github.rest.pulls.update({
                owner,
                repo,
                pull_number: data[0].number,
                state: 'closed',
              });
            }

      # Creating a new pull request
      - name: Create pull request against target branch
        if: steps.create-branch-push-changes.outputs.has_changes != 'false'
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.CI_TOKEN }}
          script: |
            const { repo, owner } = context.repo;
            await github.rest.pulls.create({
              owner,
              repo,
              head: '${{ env.NEW_BRANCH }}',
              base: '${{ env.BASE_BRANCH }}',
              title: `[Auto-generated] Submodule Updates`,
              body: `Auto-generated to update submodules.`,
            });
